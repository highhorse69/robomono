{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Robomono/robomono.io/src/container/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../component/CardList';\nimport Card from '../component/Card';\nimport SearchBox from '../component/SearchBox';\nimport './App.css';\nimport Scroll from '../component/Scroll.js';\nimport ErrorBoundary from '../ErrorBoundary';\nimport { connect } from 'react-redux';\nimport { setSearchField, requestRobots } from '../action.js';\nimport { intialStateSearch, intialStateRobots } from '../reducer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField,\n    robots: state.robots,\n    isPending: state.isPending,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  }\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filterRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1\",\n        children: \"ROBOMONO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n        children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n          children: /*#__PURE__*/_jsxDEV(CardList, {\n            robots: filterRobots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mac/Desktop/Robomono/robomono.io/src/container/App.js"],"names":["React","Component","CardList","Card","SearchBox","Scroll","ErrorBoundary","connect","setSearchField","requestRobots","intialStateSearch","intialStateRobots","mapStateToProps","state","searchField","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","constructor","componentDidMount","fetch","then","response","json","users","setState","render","props","filterRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAuBC,aAAvB,QAA2C,cAA3C;AACA,SAAQC,iBAAR,EAA0BC,iBAA1B,QAAkD,eAAlD;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAE;AAC3B,SAAM;AAEDC,IAAAA,WAAW,EAACD,KAAK,CAACC,WAFjB;AAIDC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MAJb;AAMDC,IAAAA,SAAS,EAACH,KAAK,CAACG,SANf;AAQDC,IAAAA,KAAK,EAAEJ,KAAK,CAACI;AARZ,GAAN;AAaH,CAdD;;AAeA,MAAMC,kBAAkB,GAAIC,QAAD,IAC3B;AACA,SAAM;AAGFC,IAAAA,cAAc,EAAGC,KAAD,IAASF,QAAQ,CAACX,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAH/B;AAIFC,IAAAA,eAAe,EAAC,MAAIL,QAAQ,CAACV,aAAa,EAAd;AAJ1B,GAAN;AASC,CAXD;;AAcA,MAAMgB,GAAN,SAAkBxB,SAAlB,CAEA;AAEIyB,EAAAA,WAAW,GACX;AACI;AACA,SAAKb,KAAL,GACR;AACCE,MAAAA,MAAM,EAAE;AADT,KADQ;AAKP;;AACDY,EAAAA,iBAAiB,GAAE;AAEfC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,KAAK,IAAE;AAAC,WAAKC,QAAL,CAAc;AAAClB,QAAAA,MAAM,EAAEiB;AAAT,OAAd;AAA+B,KAF7C;AAGH;;AAKGE,EAAAA,MAAM,GAAE;AACH,UAAM;AAACnB,MAAAA;AAAD,QAAS,KAAKF,KAApB;AACL,UAAK;AAACC,MAAAA,WAAD;AAAaM,MAAAA;AAAb,QAA6B,KAAKe,KAAvC;AACO,UAAMC,YAAY,GAAC,KAAKvB,KAAL,CAAWE,MAAX,CAAkBsB,MAAlB,CAAyBC,KAAK,IAAG;AACvD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC3B,WAAW,CAAC0B,WAAZ,EAAlC,CAAP;AACH,KAFyB,CAAnB;AAMH,wBACJ;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACU;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADV,eAKc,QAAC,SAAD;AAAW,QAAA,YAAY,EAAEpB;AAAzB;AAAA;AAAA;AAAA;AAAA,cALd,eAQS,QAAC,MAAD;AAAA,+BACA,QAAC,aAAD;AAAA,iCAEC,QAAC,QAAD;AAAU,YAAA,MAAM,EAAEgB;AAAlB;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cART;AAAA;AAAA;AAAA;AAAA;AAAA,YADI;AAoBH;;AAlDL;;AA4DA,eAAe7B,OAAO,CAACK,eAAD,EAAiBM,kBAAjB,CAAP,CAA4CO,GAA5C,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport CardList from '../component/CardList';\nimport Card from '../component/Card';\nimport SearchBox from '../component/SearchBox';\nimport './App.css';\nimport Scroll from '../component/Scroll.js';\nimport ErrorBoundary from '../ErrorBoundary';\nimport {connect} from 'react-redux';\nimport {setSearchField,requestRobots} from '../action.js';\nimport {intialStateSearch,intialStateRobots} from '../reducer.js'\n\nconst mapStateToProps = state=>{\n    return{\n\n         searchField:state.searchField,\n        \n         robots: state.robots,\n\n         isPending:state.isPending,\n\n         error :state.error\n       \n       \n\n    }\n}\nconst mapDispatchToProps = (dispatch)=>\n{\nreturn{\n\n\n    onSearchChange: (event)=>dispatch(setSearchField(event.target.value)),\n    onRequestRobots:()=>dispatch(requestRobots())\n\n}\n\n\n}\n\n\nclass App extends Component\n\n{ \n\n    constructor()\n    {\n        super()\n        this.state=\n{\n robots :[]\n\n}\n}\ncomponentDidMount(){\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>{this.setState({robots :users})});\n}\n\n\n\n    \n    render(){\n         const {robots}=this.state;\n    const{searchField,onSearchChange}=this.props;\n           const filterRobots=this.state.robots.filter(robot =>{\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n           \n          \n    \n        return(\n    <div className='tc'>\n              <h1 className='f1'>ROBOMONO</h1>\n             \n                \n\n                  <SearchBox searchChange={onSearchChange}/>\n\n\n             <Scroll>\n             <ErrorBoundary>\n\n              <CardList robots={filterRobots}/>\n              </ErrorBoundary>\n\n              </Scroll>\n    </div>\n  );\n\n\n    }\n}\n\n\n\n\n\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}